@tailwind base;
@tailwind components;
@tailwind utilities;

/* @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Archivo:wght@400;500;600;700&display=swap'); */

@layer base {
  :root {
    /* Keep color variables but override body background/foreground below */
    --background: 0 0% 100%;
    --foreground: 222 89% 52%; /* Royal blue #2038E5 */
    --card: 222 70% 97%;
    --card-foreground: 222 89% 52%;
    --popover: 222 70% 97%;
    --popover-foreground: 222 89% 52%;
    --primary: 222 89% 52%; /* Royal blue #2038E5 */
    --primary-foreground: 0 0% 100%;
    --secondary: 222 65% 65%;
    --secondary-foreground: 0 0% 100%;
    --muted: 222 40% 92%;
    --muted-foreground: 222 60% 60%;
    --accent: 16 100% 50%; /* Red-orange #FF4500 */
    --accent-foreground: 0 0% 100%;
    --destructive: 16 100% 50%;
    --destructive-foreground: 0 0% 100%;
    --border: 222 70% 90%;
    --input: 222 40% 96%;
    --ring: 222 89% 52%;
    --radius: 0.5rem; /* Reduced radius for sharper corners? */

    --royal-blue: 222 89% 52%;
    --darker-blue: 222 89% 40%;
    --blue-overlay: 222 89% 52%;
    --gold: 40 100% 60%;
    --green: 160 100% 40%;
  }
}

@layer base {
  * {
    @apply border-border rounded-[0rem]; /* Remove rounding */
    border-width: 0; /* Remove default borders if any */
  }

  html {
    scroll-behavior: smooth;
  }

  body {
    /* BIOS Look: Gray background, white text, monospace font */
    @apply bg-gray-700 text-white;
    font-family: monospace;
    /* background-attachment: fixed; /* Remove fixed attachment if present */
  }

/* Comment out custom heading styles */
/*
  h1, h2, h3, h4, h5 {
    font-family: 'Archivo', sans-serif;
    font-weight: 600;
    letter-spacing: -0.02em;
    line-height: 1.2;
  }

  h6, .nav-text {
    font-family: 'Inter', sans-serif;
    font-weight: 600;
    letter-spacing: 0.05em;
    text-transform: uppercase;
  }
*/

  section {
    /* position: relative; */ /* Remove positioning? */
    /* margin-bottom: 8rem; */ /* Remove large margins */
     margin-bottom: 1rem; /* Add small margin back? */

  }

  /* Keep media query structure but remove specific rules if needed */
  @media (max-width: 768px) {
    section {
       margin-bottom: 1rem;
      /* margin-bottom: 5rem; */
    }
  }
}

@layer components {
  /* Comment out most custom components */
/*
  .noise-texture {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1000;
    opacity: 0.03;
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.5' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
  }

  .scanline {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 999;
    background: linear-gradient(
      to bottom,
      transparent 50%,
      rgba(32, 56, 229, 0.03) 50%,
      transparent 100%
    );
    background-size: 100% 4px;
    opacity: 0.1;
  }

  .logo-text {
    position: relative;
    display: inline-block;
  }

  .logo-text::after {
    content: '';
    position: absolute;
    left: 0;
    bottom: -4px;
    width: 100%;
    height: 2px;
    background: linear-gradient(
      to right,
      rgba(32, 56, 229, 0.8) 0%,
      rgba(32, 56, 229, 0.8) 40%,
      rgba(255, 69, 0, 1) 40%,
      rgba(255, 69, 0, 1) 45%,
      rgba(32, 56, 229, 0.8) 45%,
      rgba(32, 56, 229, 0.8) 100%
    );
    border-radius: 0;
  }

  .nostalgic-container {
    @apply relative border border-primary/20 bg-primary/5 overflow-hidden;
    backdrop-filter: blur(8px);
  }

  .digital-card {
    @apply relative rounded-xl border-2 border-primary/30 bg-white overflow-hidden;
    box-shadow: 0 8px 30px rgba(32, 56, 229, 0.15);
  }

  .digital-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(
      to right,
      rgba(32, 56, 229, 0.7) 0%,
      rgba(32, 56, 229, 0.9) 50%,
      rgba(32, 56, 229, 0.7) 100%
    );
    border-radius: 0;
  }

  @media (max-width: 768px) {
    .digital-card {
      border: none;
      box-shadow: none;
      background: transparent;
    }

    .digital-card::before {
      display: none;
    }

    .digital-card .glitch-container {
      background: transparent;
      overflow: visible;
    }

    .digital-card .glitch-container::before,
    .digital-card .glitch-container::after {
      display: none;
    }

    .mobile-app-container {
      box-shadow: 0 8px 30px rgba(32, 56, 229, 0.15);
      border: 1px solid rgba(32, 56, 229, 0.2);
    }
  }

  .nostalgic-button {
    @apply relative overflow-hidden border-0 bg-primary transition-all
    hover:bg-primary/90 active:scale-[0.98] rounded-md;
    box-shadow: 0 4px 12px rgba(32, 56, 229, 0.3);
    position: relative;
    z-index: 1;
  }

  .nostalgic-button::after {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(45deg, rgba(32, 56, 229, 0), rgba(255, 69, 0, 0.2));
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: -1;
  }

  .nostalgic-button:hover::after {
    opacity: 1;
  }

  .nostalgic-button-secondary {
    @apply relative overflow-hidden border-2 border-primary/30 bg-white text-primary transition-all rounded-full
    hover:border-primary hover:bg-primary/5 active:scale-[0.98];
  }

  .nostalgic-input {
    @apply bg-white border-2 border-primary/20 focus:border-primary/40 focus:ring-primary/10 rounded-full;
    position: relative;
    overflow: hidden;
  }

  .nostalgic-input:focus-within {
    box-shadow: 0 0 0 2px rgba(32, 56, 229, 0.1);
  }

  .nostalgic-input:focus-within::after {
    content: '';
    position: absolute;
    width: 30px;
    height: 100%;
    top: 0;
    right: -30px;
    background: linear-gradient(90deg, rgba(32, 56, 229, 0.1), transparent);
    transform: skewX(-30deg);
    animation: input-scan 2s ease-in-out infinite;
    pointer-events: none;
  }

  @keyframes input-scan {
    0% {
      right: 100%;
    }
    100% {
      right: -30px;
    }
  }

  .wavy-underline {
    position: relative;
  }

  .wavy-underline::after {
    content: '';
    position: absolute;
    left: 0;
    bottom: -5px;
    width: 100%;
    height: 4px;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 10 2'%3E%3Cpath d='M0 1 C 2.5 0, 7.5 2, 10 1' stroke='%23FF4500' stroke-width='.5' fill='none'/%3E%3C/svg%3E");
    background-repeat: repeat-x;
    background-size: 10px 2px;
    border-radius: 0;
  }

  .glitch-text {
    position: relative;
    color: hsl(var(--primary));
    text-shadow: 1px 1px 0 hsl(var(--accent) / 0.7);
  }

  .glitch-text::before,
  .glitch-text::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: inherit;
    overflow: hidden;
  }

  .glitch-text::before {
    left: 2px;
    text-shadow: -1px 0 red;
    animation: glitch-anim 2s infinite linear alternate-reverse;
    clip-path: polygon(0 0, 100% 0, 100% 30%, 0 30%);
  }

  .glitch-text::after {
    left: -2px;
    text-shadow: -1px 0 blue;
    animation: glitch-anim 3s infinite linear alternate-reverse;
    clip-path: polygon(0 70%, 100% 70%, 100% 100%, 0 100%);
  }
*/
  /* Keep keyframes if needed by remaining components, otherwise remove */
/*
  @keyframes glitch-anim {
     0% { clip-path: polygon(0 2%, 100% 2%, 100% 5%, 0 5%); }
     5% { clip-path: polygon(0 15%, 100% 15%, 100% 17%, 0 17%); }
    10% { clip-path: polygon(0 10%, 100% 10%, 100% 20%, 0 20%); }
    15% { clip-path: polygon(0 35%, 100% 35%, 100% 37%, 0 37%); }
    20% { clip-path: polygon(0 50%, 100% 50%, 100% 55%, 0 55%); }
    25% { clip-path: polygon(0 70%, 100% 70%, 100% 72%, 0 72%); }
    30% { clip-path: polygon(0 80%, 100% 80%, 100% 85%, 0 85%); }
    35% { clip-path: polygon(0 50%, 100% 50%, 100% 52%, 0 52%); }
    40% { clip-path: polygon(0 90%, 100% 90%, 100% 95%, 0 95%); }
    45% { clip-path: polygon(0 60%, 100% 60%, 100% 65%, 0 65%); }
    50% { clip-path: polygon(0 30%, 100% 30%, 100% 35%, 0 35%); }
    55% { clip-path: polygon(0 10%, 100% 10%, 100% 12%, 0 12%); }
    60% { clip-path: polygon(0 40%, 100% 40%, 100% 45%, 0 45%); }
    65% { clip-path: polygon(0 75%, 100% 75%, 100% 80%, 0 80%); }
    70% { clip-path: polygon(0 55%, 100% 55%, 100% 60%, 0 60%); }
    75% { clip-path: polygon(0 20%, 100% 20%, 100% 25%, 0 25%); }
    80% { clip-path: polygon(0 85%, 100% 85%, 100% 90%, 0 90%); }
    85% { clip-path: polygon(0 40%, 100% 40%, 100% 42%, 0 42%); }
    90% { clip-path: polygon(0 65%, 100% 65%, 100% 70%, 0 70%); }
    95% { clip-path: polygon(0 25%, 100% 25%, 100% 27%, 0 27%); }
   100% { clip-path: polygon(0 5%, 100% 5%, 100% 10%, 0 10%); }
 }

 @keyframes flash-effect {
   0%, 100% { opacity: 0.1; }
   50% { opacity: 0.3; }
 }

 @keyframes scanline {
   0% { transform: translateY(0); }
   100% { transform: translateY(100%); }
 }

 @keyframes tape-noise {
   0%, 100% { opacity: 0.05; }
   50% { opacity: 0.1; }
 }

 .glitch-container {
   position: relative;
   overflow: hidden;
 }

 .glitch-container::before {
   content: '';
   position: absolute;
   top: 0;
   left: 0;
   width: 100%;
   height: 100%;
   background: linear-gradient(red, transparent 2px, transparent), linear-gradient(90deg, blue, transparent 2px, transparent);
   background-size: 100% 2px, 2px 100%;
   opacity: 0.05;
   animation: glitch-line 3s infinite linear alternate;
   pointer-events: none;
 }

 .glitch-container::after {
   content: '';
   position: absolute;
   top: 0;
   left: 0;
   width: 100%;
   height: 100%;
   background: rgba(32, 56, 229, 0.02);
   animation: flash-effect 1s steps(1, end) infinite;
   pointer-events: none;
 }

 @keyframes glitch-line {
   0% { transform: translate(0, 0); }
   10% { transform: translate(-2px, 1px); }
   20% { transform: translate(1px, -1px); }
   30% { transform: translate(2px, 2px); }
   40% { transform: translate(-1px, -2px); }
   50% { transform: translate(0, 0); }
   60% { transform: translate(1px, 1px); }
   70% { transform: translate(-2px, -1px); }
   80% { transform: translate(-1px, 2px); }
   90% { transform: translate(2px, -2px); }
   100% { transform: translate(0, 0); }
 }

 .dotted-divider {
   height: 2px;
   background-image: linear-gradient(to right, hsl(var(--primary) / 0.3) 33%, transparent 0%);
   background-size: 10px 2px;
   background-repeat: repeat-x;
   margin-top: 4rem;
   margin-bottom: 4rem;
   border-radius: 0;
 }

 .section-divider {
   height: 1px;
   background: linear-gradient(to right, transparent, hsl(var(--primary) / 0.1), transparent);
   position: relative;
   margin-top: 4rem;
   margin-bottom: 4rem;
   border-radius: 0;
 }

 .section-divider::after {
   content: '';
   position: absolute;
   top: -4px;
   left: 50%;
   transform: translateX(-50%);
   width: 10px;
   height: 10px;
   background-color: hsl(var(--primary) / 0.3);
   border-radius: 50%;
   animation: divider-slide 4s linear infinite;
   box-shadow: 0 0 10px hsl(var(--primary) / 0.2);
 }

 @keyframes divider-slide {
   0% { transform: translateX(-50%) scale(0.8); opacity: 0.5; }
   50% { transform: translateX(-50%) scale(1.2); opacity: 1; }
   100% { transform: translateX(-50%) scale(0.8); opacity: 0.5; }
 }

 .blue-overlay {
   position: relative;
   overflow: hidden;
 }

 .blue-overlay::after {
   content: '';
   position: absolute;
   inset: 0;
   background-color: hsl(var(--primary) / 0.1);
   mix-blend-mode: multiply;
   pointer-events: none;
 }

 @media (prefers-color-scheme: dark) {
   .blue-overlay::after {
     mix-blend-mode: color-dodge;
     opacity: 0.3;
     background-color: hsl(var(--primary) / 0.3);

   }
 }

 .pixel-border {
   border: 4px solid transparent;
   border-image: url("data:image/svg+xml,%3Csvg width='12' height='12' viewBox='0 0 12 12' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0 0 H 12 V 12 H 0 V 0 Z M 2 2 H 10 V 10 H 2 V 2 Z' fill='hsl(222 89% 52% / 0.5)'/%3E%3C/svg%3E") 4 stretch;
 }

 .pixel-border::before {
   content: '';
   position: absolute;
   inset: 0;
   border: 4px solid transparent;
   border-image: url("data:image/svg+xml,%3Csvg width='12' height='12' viewBox='0 0 12 12' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0 0 H 12 V 12 H 0 V 0 Z M 2 2 H 10 V 10 H 2 V 2 Z' fill='hsl(16 100% 50% / 0.5)'/%3E%3C/svg%3E") 4 stretch;
   animation: gradient-pulse 3s infinite;
   z-index: -1;
 }

 @keyframes gradient-pulse {
   0%, 100% { opacity: 0.3; }
   50% { opacity: 0.7; }
 }

 .pixel-gradient {
   background: linear-gradient(45deg, hsl(var(--primary) / 0.1), hsl(var(--accent) / 0.1));
 }


 .numbered-list {
   counter-reset: list-counter;
 }

 .numbered-list li {
   counter-increment: list-counter;
   position: relative;
   padding-left: 2.5rem;
   margin-bottom: 1rem;
 }

 .numbered-list li::before {
   content: counter(list-counter);
   position: absolute;
   left: 0;
   top: 0.1em;
   width: 1.8rem;
   height: 1.8rem;
   background-color: hsl(var(--primary) / 0.1);
   color: hsl(var(--primary));
   font-weight: bold;
   display: flex;
   align-items: center;
   justify-content: center;
   border-radius: 50%;
   font-size: 0.9em;
 }
 */
}

/* Keep tiptap styles if editor is used, otherwise remove */
.tiptap p.is-editor-empty:first-child::before {
  color: #adb5bd;
  content: attr(data-placeholder);
  float: left;
  height: 0;
  pointer-events: none;
}

.tiptap p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
}